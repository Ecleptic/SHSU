org	100h

section .data
CR: db  0Dh,0Ah ,'$'
prompt1: db 'Enter a letter: $'
prompt2: db "This was not a letter, please type in a letter and try again. ","$"
prompt3: db "As an 8-bit binary value the letter looks like this: ","$"
prompt4: db "In uppercase the letter looks like this: ","$"
prompt5: db "In lowercase the letter looks like this: ","$"
prompt6: db "Would you like to repeat this?  (Y/N)","$"
upper: db '' ,'$'
lower: db '' ,'$'
bin: db '' ,'$'
exCode: db 0,"$"

section .text
start:
  mov [upper],0h   ;clear out upper
  mov [lower],0h   ;clear out lower
  mov [bin],0h  ;clear out bin

  call letter_in  ;read a letter

  call letter_out ;print the letter in upper and lower case

again?:
  mov	dx,CR
  mov	ah,09h 		; print prompt
  int 21h
  mov	dx,CR
  mov	ah,09h 		; print prompt
  int 21h

  mov	dx,prompt6
  mov	ah,09h 		; print prompt
  int 21h

  mov	ah,1		; input char function
  int	21h		  ; read char into al
  and al,0DFh ; Force uppercase letter (if letter)
  cmp al, "Y"

  mov	dx,CR
  mov	ah,09h 		; print prompt
  int 21h
  mov	dx,CR
  mov	ah,09h 		; print prompt
  int 21h

  je start    ;if it is 'Y' then restart

Exit:
	mov     ah,04Ch           ;DOS function: Exit program
	mov     al,0              ;Return exit code value
	int     21h               ;Call DOS.  Terminate program






letter_in:
  push ax
begin:
  mov	dx,prompt1
  mov	ah,09h 		; print prompt
  int 21h

  mov	ah,1		; input char function
	int	21h		  ; read char into al

  and al,0DFh ; Force uppercase letter (if letter)
  cmp al, "A"
  jl wrong
  cmp al,"Z"
  jg wrong    ; if it's not between 'A'-'Z' then repeat until the user makes it 'A'-'Z'

  mov	dx,CR
  mov	ah,09h 		; Enter
  int 21h

  mov [upper],al    ; save the uppercase letter into upper



out1:
  pop	ax		; restore reg
ret

wrong:
  mov	dx,CR
  mov	ah,09h 		; Enter
  int 21h

  mov	dx,prompt2
  mov	ah,09h 		; print prompt
  int 21h
  jmp begin
ret

letter_out:
  mov	dx,prompt4
  mov	ah,09h 		; "in uppercase it's":
  int 21h

  mov ah,09h
  mov dx,upper
  int 21h

  mov	dx,CR
  mov	ah,09h 		; Enter
  int 21h

  mov al,[upper]    ; pull upper back into al
  add al,020h       ; convert to lowercase
  mov [lower],al    ; save the lowerase letter into lower


  mov	dx,prompt5
  mov	ah,09h 		; "in lowercase it's":
  int 21h

  mov ah,09h
  mov dx,lower
  int 21h
ret
