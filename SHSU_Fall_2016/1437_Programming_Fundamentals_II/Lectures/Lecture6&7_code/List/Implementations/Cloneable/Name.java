/**   A mutable class that represents a person's name    that can be cloned.      @author Frank M. Carrano   @author Timothy M. Henry   @version 4.0*/public class Name implements Copyable{	private String first; // First name	private String last;  // Last name	public Name()	{		this("", "");	} // end default constructor	public Name(String firstName, String lastName)	{		first = firstName;		last = lastName;	} // end constructor	public void setName(String firstName, String lastName)	{		setFirst(firstName);		setLast(lastName);	} // end setName	public String getName()	{		return toString();	} // end getName	public void setFirst(String firstName)	{		first = firstName; 	} // end setFirst	public String getFirst()	{		return first;	} // end getFirst	public void setLast(String lastName)	{		last = lastName;	} // end setLast	public String getLast()	{		return last;	} // end getLast	public void giveLastNameTo(Name aName)	{		aName.setLast(last);	} // end giveLastNameTo	public String toString()	{		return first + " " + last;	} // end toString	public boolean equals(Object other)	{      boolean result;      if ((other == null) || (getClass() != other.getClass()))         result = false;      else      {         Name otherName = (Name)other;         result = first.equals(otherName.first) &&                   last.equals(otherName.last);      } // end if      return result;	} // end equals	public Object clone()   {      Name theCopy = null;//    Object theCopy = null;            // ALTERNATE      try      {         theCopy = (Name)super.clone(); // Object can throw an exception//       theCopy = super.clone();       // ALTERNATE. Object can throw an exception      }      catch (CloneNotSupportedException e)      {         System.err.println("Name cannot clone: " + e.toString());      }            return theCopy;   } // end clone} // end Name